apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{.Release.Name}}-portal
  labels:
    name: {{.Release.Name}}
    instance: {{.Release.Name}}-portal-cluster
spec:
  replicas: {{.Values.replicas.portal}}
  serviceName: {{.Release.Name}}-portal-svc-headless
  selector:
    matchLabels:
      name: {{.Release.Name}}-portal
      instance: {{.Release.Name}}-portal-node
  template:
    metadata:
      labels:
        name: {{.Release.Name}}-portal
        instance: {{.Release.Name}}-portal-node
        date: "{{ now | unixEpoch }}"
    spec:
      containers:
      - name: {{.Release.Name}}-portal
        image: mftlabs/amps_portal:latest
        env:
        - name: AMPS_ADMIN_HOST
          value: {{ quote .Values.ui.admin_host}}
        - name: AMPS_HOST
          value: {{ quote .Values.ui.user_host}}
        - name: AMPS_SVC_HOST
          value: {{ quote .Values.backend.svc_host}}
        - name: AMPS_PORT
          value: {{ quote .Values.ui.http_port}}
        - name: AMPS_SSL_PORT
          value: {{ quote .Values.ui.ssl.port}}
        - name: AMPS_USE_SSL
          value: {{ quote .Values.ui.ssl.enabled}}
        - name: AMPS_FORCE_SSL
          value: {{ quote .Values.ui.ssl.force}}
        - name: AMPS_GEN_CERTS
          value: {{ quote .Values.ui.ssl.gen_certs}}
        - name: AMPS_EXTRA_DOMAINS
          value: {{ quote .Values.ui.ssl.domains}}
        - name: AMPS_DNS_EMAILS
          value: {{ quote .Values.ui.ssl.emails}}
        - name: AMPS_SSL_KEY
          value: /amps/certs/ssl.key
        - name: AMPS_SSL_CERT
          value: /amps/certs/ssl.cert
        - name: AMPS_CERT_MODE
          value: {{ quote .Values.ui.ssl.certmode}}
        - name: RELEASE_NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: AMPS_OPENSEARCH_ADDR
          value: https://opensearch-cluster-master:9200
        - name: AMPS_VAULT_ADDR
          value: http://{{.Release.Name}}-vault:8200
        - name: AMPS_MONGO_ADDR
          value: mongodb://{{.Release.Name}}-mongodb:27017/{{.Release.Name}}
        - name: AMPS_NATS_HOST
          value: {{.Release.Name}}-nats
        - name: AMPS_NATS_PORT
          value: "4222"
        - name: AMPS_CFG_PATH
          value: /amps/data/cfg
        - name: DATAPIO_SERVICE_NAME
          value: {{.Release.Name}}-portal-svc-headless
        - name: DATAPIO_APP_NAME
          value: {{.Release.Name}}_portal
        - name: RELEASE_COOKIE
          valueFrom:
            secretKeyRef:
              name: amps-secret
              key: cookie
              optional: false
        - name: SECRET_KEY_BASE
          valueFrom:
            secretKeyRef:
              name: amps-secret
              key: keybase
              optional: false
      {{ if .Values.ui.ssl.force }}
        readinessProbe:
          periodSeconds: 30
          httpGet:
            port: {{ .Values.ui.ssl.port}}
            httpHeaders:
            - name: Host
              value:  {{ .Values.ui.user_host}}
            scheme: HTTPS
      {{ else }}
        readinessProbe:
          periodSeconds: 30
          httpGet:
            port: {{ .Values.ui.http_port}}
            httpHeaders:
            - name: Host
              value:  {{ .Values.ui.user_host}}
      {{ end }}
        volumeMounts:
        - name: {{.Release.Name}}-temp-pv
          mountPath: /amps/data/tmp
        - name: {{.Release.Name}}-modules-pv
          mountPath: /amps/data/modules
        - name: {{.Release.Name}}-cfg-pv
          mountPath: /amps/data/cfg
        - name: {{.Release.Name}}-misc-pv
          mountPath: /amps/data/misc
        - name: amps-ssl-secret-volume
          mountPath: /amps/certs
          readOnly: true
        ports:
          - name: epmd
            containerPort: 4369
            protocol: TCP
          - name: amps
            containerPort: {{.Values.ui.http_port}}
            protocol: TCP
          # - name: amps
          #   containerPort: {{.Values.ui.ssl.port}}
          #   protocol: TCP
      initContainers:
      - name: init-nats
        image: busybox:1.28
        command: ['sh', '-c', "until nslookup {{.Release.Name}}-nats.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for {{.Release.Name}}-nats; sleep 2; done"]
      # - name: init-vault
      #   image: busybox:1.28
      #   command: ['sh', '-c', "until nslookup {{.Release.Name}}-vault.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for {{.Release.Name}}-vault; sleep 2; done"]
      - name: init-db
        image: curlimages/curl:latest
        command: ['sh', '-c', "until nslookup {{.Release.Name}}-mongodb.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for {{.Release.Name}}-mongodb; sleep 2; done"]
      volumes:
      - name: {{.Release.Name}}-temp-pv
        persistentVolumeClaim:
          claimName: {{.Release.Name}}-temp-pvc
      - name: {{.Release.Name}}-modules-pv
        persistentVolumeClaim:
          claimName: {{.Release.Name}}-modules-pvc
      - name: {{.Release.Name}}-cfg-pv
        persistentVolumeClaim:
          claimName: {{.Release.Name}}-cfg-pvc
      - name: {{.Release.Name}}-misc-pv
        persistentVolumeClaim:
          claimName: {{.Release.Name}}-misc-pvc
      - name: amps-ssl-secret-volume
        secret:
          secretName: amps-ssl
      #  ports:
      #  - containerPort: 8080